[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "image_snip"
dynamic = ["version"]
description = 'Command-line utility to apply the same supported operations to a batch of image files.'
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
keywords = [ "images", "crop"]

authors = [
  { name = "Bill Melvin", email = "bill@sbillmelvin.com" },
]

dependencies = [ "pillow" ]

[project.urls]
Source = "https://github.com/wmelvin/image-snip"

[tool.setuptools.dynamic]
version = {attr = "image_snip.__version__"}

[tool.setuptools.packages.find]
where = ["."]
include = ["image_snip*"]
exclude = ["test*"]
namespaces = false

[tool.pytest.ini_options]
pythonpath = ["."]

[project.scripts]
image_snip = "image_snip:main"

[tool.ruff]
line-length = 88
indent-width = 4
extend-exclude = ["tests"]

[tool.ruff.lint]
select = [
    "A",    # flake8-builtins
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "E",    # pycodestyle errors
    "F",    # Pyfakes
    "FA",   # flake8-future-annotations
    "I",    # isort
    "ISC",  # flake8-implicit-str-concat
    "PERF", # Perflint
    # "PL",   # Pylint
    "PTH",  # flake8-use-pathlib
    "PYI",  # flake8-pyi
    "RET",  # flake8-return
    "S",    # flake8-bandit
    "SIM",  # flake8-simplify
    "W"     # Warning
]
# select = ["ALL"]

[tool.ruff.extend-per-file-ignores]
# Permit use of assert.
"__init__.py" = ["S101"]